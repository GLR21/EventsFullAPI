name: Run Tests

on:
  pull_request:
    branches:
      - master
jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d pgsql
          docker-compose -f docker-compose.yml build laravel.test
          docker-compose -f docker-compose.yml up -d laravel.test

      - name: Create .env.testing file for Docker Compose
        run: |
          echo DB_CONNECTION=pgsql >> .env.testing
          echo DB_HOST=pgsql >> .env.testing
          echo DB_PORT=5432 >> .env.testing
          echo DB_DATABASE=${{ secrets.DB_DATABASE }} >> .env.testing
          echo DB_USERNAME=${{ secrets.DB_USERNAME }} >> .env.testing
          echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env.testing

      - name: Wait for PostgreSQL
        run: |
          until docker-compose exec -T pgsql pg_isready -U ${{ secrets.DB_USERNAME }} -d ${{ secrets.DB_DATABASE }}; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 3
          done

      - name: Install Composer dependencies
        run: docker-compose exec -T laravel.test composer install

      - name: Run migrations
        run: docker-compose exec -T laravel.test php artisan migrate --env=testing --force

      - name: Run tests
        run: docker-compose exec -T laravel.test php artisan test --env=testing

      - name: Tear down Docker Compose
        if: always()
        run: docker-compose -f docker-compose.yml down
