name: Run Tests

on:
  pull_request:
    branches:
      - homolog

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Copy .env.testing
        run: cp .env.testing .env

      - name: Set up Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d pgsql.app
          docker-compose -f docker-compose.yml build laravel.app
          docker-compose -f docker-compose.yml up -d laravel.app

      - name: Wait for PostgreSQL
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          max_wait=120
          waited=0
          while ! docker-compose exec -T pgsql.app pg_isready -U $(grep DB_USERNAME .env.testing | cut -d '=' -f2) -d $(grep DB_DATABASE .env.testing | cut -d '=' -f2); do
            echo "PostgreSQL is not ready yet. Waiting..."
            sleep 3
            waited=$((waited + 3))
            if [ $waited -ge $max_wait ]; then
              echo "PostgreSQL failed to become ready within $max_wait seconds."
              docker-compose logs pgsql.app
              exit 1
            fi
          done
          echo "PostgreSQL is ready."

      - name: Install Composer dependencies
        run: docker-compose exec -T laravel.app composer install

      - name: Run migrations
        run: docker-compose exec -T laravel.app php artisan migrate --env=testing --force

      - name: Run tests
        run: docker-compose exec -T laravel.app php artisan test --env=testing

      - name: Tear down Docker Compose
        if: always()
        run: docker-compose -f docker-compose.yml down
